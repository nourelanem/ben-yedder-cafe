"""
Django settings for BenYedder project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

OAUTH2_PROVIDER = {
    # active OpenID Connect
    "OIDC_ENABLED": True,

    # Clé RSA privée pour signer les JWT (RS256).
    # Stocke ta clé PEM dans la variable d'environnement OIDC_RSA_PRIVATE_KEY
    "OIDC_RSA_PRIVATE_KEY": os.environ.get("OIDC_RSA_PRIVATE_KEY"),

    # Définition des scopes OAuth2 (openid est OBLIGATOIRE pour OIDC)
    "SCOPES": {
        "openid": "Scope OpenID Connect",
        "read":   "Accès en lecture",
        "write":  "Accès en écriture",
        "offline": "Accès en mode hors-ligne (refresh token)",
        'email': 'Access to your email address',
        'cart': 'Access to your shopping cart',
        # ajoute d'autres scopes si besoin…
    },
    "ALLOW_REFRESH_TOKEN": True,
    "OIDC_RP_INITIATED_LOGOUT_ENABLED":       True,
    "OIDC_RP_INITIATED_LOGOUT_ALWAYS_PROMPT": False,

    # Personnalisation de l'ID token (claims supplémentaires)
    "OIDC_ID_TOKEN_INCLUDE_CLAIMS": True,

    # (optionnel) RP-Initiated Logout
    # "OIDC_RP_INITIATED_LOGOUT_ENABLED": True,
    # "OIDC_RP_INITIATED_LOGOUT_ALWAYS_PROMPT": False,
}


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-g40p^vkxhra*do5d6#m5dvucg7gwdjijo*4rj^m0=coa%k&k+^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',

    'oauth2_provider',
    'corsheaders',
    'accounts',
    'categories.apps.CategoriesConfig',

    #'oauth2_provider.contrib.openid_connect',

]
# Configuration de Django REST Framework


REST_FRAMEWORK = {
    # Pagination (à conserver)
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,

    # Authentification : OAuth2 + sessions
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework.authentication.SessionAuthentication',
    ],

    # Seuls les utilisateurs authentifiés peuvent accéder aux endpoints
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'BenYedder.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],

        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
MIDDLEWARE.insert(0, 'corsheaders.middleware.CorsMiddleware')

WSGI_APPLICATION = 'BenYedder.wsgi.application'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

CORS_ALLOW_ALL_ORIGINS = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
#AUTH_USER_MODEL = 'cafe.Utilisateur'


LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/profile/'
LOGOUT_REDIRECT_URL = '/login/'


OIDC_RSA_PRIVATE_KEY = """
-----BEGIN RSA PRIVATE KEY-----
MIICXAIBAAKBgQDc... (clé RSA complète ici)
-----END RSA PRIVATE KEY-----
"""
