#!/usr/bin/env python
import os
import sys
import django

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'BenYedder.settings')
django.setup()

from categories.models import Cafe, Boisson, Viennoiserie

def create_test_products():
    print("üîÑ Cr√©ation des produits de test...")
    
    # Cr√©er des caf√©s
    cafes_data = [
        {
            'nom': 'Espresso Classique',
            'description': 'Un espresso traditionnel avec une cr√®me parfaite',
            'prix': 3.50,
            'stock': 100,
            'composition': 'Arabica 100%, torr√©faction moyenne, origine Italie'
        },
        {
            'nom': 'Caf√© Tunisien',
            'description': 'Caf√© traditionnel tunisien aux √©pices',
            'prix': 4.00,
            'stock': 80,
            'composition': 'M√©lange arabica et robusta, √©pices traditionnelles'
        },
        {
            'nom': 'Cappuccino',
            'description': 'Espresso avec mousse de lait onctueuse',
            'prix': 5.00,
            'stock': 90,
            'composition': 'Espresso, lait vapeur, mousse de lait'
        },
        {
            'nom': 'Caf√© Turc',
            'description': 'Caf√© turc traditionnel finement moulu',
            'prix': 4.50,
            'stock': 60,
            'composition': 'Caf√© finement moulu, pr√©paration traditionnelle turque'
        }
    ]
    
    for cafe_data in cafes_data:
        cafe, created = Cafe.objects.get_or_create(
            nom=cafe_data['nom'],
            defaults=cafe_data
        )
        if created:
            print(f"‚úÖ Caf√© cr√©√©: {cafe.nom}")
        else:
            print(f"‚ö†Ô∏è Caf√© existe d√©j√†: {cafe.nom}")
    
    # Cr√©er des boissons
    boissons_data = [
        {
            'nom': 'Th√© √† la Menthe',
            'description': 'Th√© vert traditionnel √† la menthe fra√Æche',
            'prix': 2.50,
            'stock': 120,
            'volume': 250
        },
        {
            'nom': 'Jus d\'Orange Frais',
            'description': 'Jus d\'orange press√© √† la minute',
            'prix': 3.00,
            'stock': 50,
            'volume': 350
        },
        {
            'nom': 'Limonade Maison',
            'description': 'Limonade fra√Æche faite maison',
            'prix': 2.80,
            'stock': 70,
            'volume': 300
        },
        {
            'nom': 'Chocolat Chaud',
            'description': 'Chocolat chaud onctueux avec chantilly',
            'prix': 4.20,
            'stock': 40,
            'volume': 250
        }
    ]
    
    for boisson_data in boissons_data:
        boisson, created = Boisson.objects.get_or_create(
            nom=boisson_data['nom'],
            defaults=boisson_data
        )
        if created:
            print(f"‚úÖ Boisson cr√©√©e: {boisson.nom}")
        else:
            print(f"‚ö†Ô∏è Boisson existe d√©j√†: {boisson.nom}")
    
    # Cr√©er des viennoiseries
    viennoiseries_data = [
        {
            'nom': 'Croissant au Beurre',
            'description': 'Croissant traditionnel fran√ßais au beurre',
            'prix': 2.00,
            'stock': 30,
            'composition': 'P√¢te feuillet√©e, beurre fran√ßais, nature'
        },
        {
            'nom': 'Pain au Chocolat',
            'description': 'Viennoiserie avec chocolat noir',
            'prix': 2.50,
            'stock': 25,
            'composition': 'P√¢te feuillet√©e, chocolat noir 70%'
        },
        {
            'nom': 'Makroudh',
            'description': 'P√¢tisserie tunisienne aux dattes',
            'prix': 1.80,
            'stock': 40,
            'composition': 'Semoule fine, dattes fra√Æches, miel'
        },
        {
            'nom': 'Baklawa',
            'description': 'P√¢tisserie orientale aux amandes et miel',
            'prix': 3.00,
            'stock': 20,
            'composition': 'P√¢te phyllo, amandes, miel, pistaches'
        },
        {
            'nom': 'Chausson aux Pommes',
            'description': 'P√¢te feuillet√©e garnie de compote de pommes',
            'prix': 2.80,
            'stock': 15,
            'composition': 'P√¢te feuillet√©e, compote de pommes maison'
        }
    ]
    
    for viennoiserie_data in viennoiseries_data:
        viennoiserie, created = Viennoiserie.objects.get_or_create(
            nom=viennoiserie_data['nom'],
            defaults=viennoiserie_data
        )
        if created:
            print(f"‚úÖ Viennoiserie cr√©√©e: {viennoiserie.nom}")
        else:
            print(f"‚ö†Ô∏è Viennoiserie existe d√©j√†: {viennoiserie.nom}")
    
    print("\nüéâ Cr√©ation des produits termin√©e !")
    print(f"üìä Total produits:")
    print(f"   ‚òï Caf√©s: {Cafe.objects.count()}")
    print(f"   ü•§ Boissons: {Boisson.objects.count()}")
    print(f"   ü•ê Viennoiseries: {Viennoiserie.objects.count()}")

if __name__ == '__main__':
    create_test_products()
