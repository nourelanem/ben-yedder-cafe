# Generated by Django 5.1.6 on 2025-05-05 08:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('categories', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='avis',
            name='produit',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='avis',
                to='categories.produit'
            ),
        ),
        migrations.AlterField(
            model_name='avis',
            name='utilisateur',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='avis',
                to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AlterField(
            model_name='commande',
            name='produits',
            field=models.ManyToManyField(
                related_name='commandes',
                through='categories.CommandeProduit',
                to='categories.produit'
            ),
        ),
        migrations.AlterField(
            model_name='commande',
            name='utilisateur',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='commandes',
                to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AlterField(
            model_name='commandeproduit',
            name='commande',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='lignes',
                to='categories.commande'
            ),
        ),
        migrations.AlterField(
            model_name='commandeproduit',
            name='produit',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='lignes_commande',
                to='categories.produit'
            ),
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(
                    default=False,
                    help_text='Designates that this user has all permissions without explicitly assigning them.',
                    verbose_name='superuser status'
                )),
                ('username', models.CharField(
                    error_messages={'unique': 'A user with that username already exists.'},
                    help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                    max_length=150,
                    unique=True,
                    validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                    verbose_name='username'
                )),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(
                    default=False,
                    help_text='Designates whether the user can log into this admin site.',
                    verbose_name='staff status'
                )),
                ('is_active', models.BooleanField(
                    default=True,
                    help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                    verbose_name='active'
                )),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(
                    blank=True,
                    help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                    related_name='categories_user_set',
                    related_query_name='user',
                    to='auth.group',
                    verbose_name='groups'
                )),
                ('user_permissions', models.ManyToManyField(
                    blank=True,
                    help_text='Specific permissions for this user.',
                    related_name='categories_user_permissions_set',
                    related_query_name='user',
                    to='auth.permission',
                    verbose_name='user permissions'
                )),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Panier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField(default=1)),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('produit', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='dans_paniers',
                    to='categories.produit'
                )),
                ('utilisateur', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='paniers',
                    to=settings.AUTH_USER_MODEL
                )),
            ],
            options={
                'verbose_name': 'Panier',
                'verbose_name_plural': 'Paniers',
                'unique_together': {('utilisateur', 'produit')},
            },
        ),
    ]
